[{"C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\index.js":"1","C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\App.js":"2","C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\reportWebVitals.js":"3","C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\Components\\addUsers.jsx":"4","C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\Redux\\reducer.js":"5","C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\Components\\userInfo.jsx":"6","C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\Redux\\Actions.js":"7","C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\Components\\sendMessage.jsx":"8","C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\Components\\HomePage.jsx":"9","C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\Components\\sentMessages.jsx":"10"},{"size":629,"mtime":1607139202664,"results":"11","hashOfConfig":"12"},{"size":553,"mtime":1607150478597,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":3721,"mtime":1607148414617,"results":"15","hashOfConfig":"12"},{"size":786,"mtime":1607149523095,"results":"16","hashOfConfig":"12"},{"size":2235,"mtime":1607143548934,"results":"17","hashOfConfig":"12"},{"size":346,"mtime":1607149204487,"results":"18","hashOfConfig":"12"},{"size":3808,"mtime":1607149343970,"results":"19","hashOfConfig":"12"},{"size":337,"mtime":1607151018447,"results":"20","hashOfConfig":"12"},{"size":4069,"mtime":1607151395451,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1dck8yr",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\index.js",[],["47","48"],"C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\App.js",["49","50"],"import logo from './logo.svg';\nimport './App.css';\nimport HomePage from './Components/HomePage';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport UserInfo from './Components/userInfo'\nimport sendMessage from './Components/sendMessage'\n\n\n\nfunction App() {\n  return (\n\n    <Router>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/userInfo\" component={UserInfo} />\n      <Route exact path=\"/sendMessage\" component={sendMessage} />\n\n    </Router>\n  \n    \n  );\n}\n\nexport default App;\n","C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\reportWebVitals.js",[],"C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\Components\\addUsers.jsx",["51"],"import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button } from '@material-ui/core';\r\nimport { recievedUsersInfo } from './../Redux/Actions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst Adduser = () => {\r\n\r\n    const classes = useStyles();   // custom styles for materialUi component\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const fr = new FileReader();\r\n\r\n    const [userData, setUserData] = React.useState(null)\r\n    const [currentlySelectedUserIndex, setCurrentlySelectedUserIndex] = React.useState(null)\r\n\r\n    // event handler for when user uploads a json file \r\n    const recievedJson = (e) => {\r\n        console.log(\"hi\")\r\n        const files = e.target.files[0]\r\n        fr.readAsText(files)\r\n\r\n        console.log(files)\r\n    }\r\n\r\n\r\n    // fileReader onload function(asynchronus) for when it completes reading the file   \r\n    fr.onload = function (e) {\r\n\r\n        let jsonData = (e.target.result)\r\n        let userData = JSON.parse(jsonData)\r\n        setUserData(userData)\r\n        dispatch(recievedUsersInfo(userData))\r\n    }\r\n\r\n\r\n    const userSelected = (index) => {\r\n        setCurrentlySelectedUserIndex(index)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        \r\n\r\n            <div>\r\n                <h3>Lists of contacts</h3>\r\n                <p>Upload the dummy json file with contacts to list all the contacts below</p>\r\n                <input type=\"file\" id=\"selectFiles\" onChange={(e) => { recievedJson(e) }} /><br />\r\n                {\r\n                    (userData == null)\r\n                        ?\r\n                        null\r\n                        :\r\n                        <TableContainer component={Paper}>\r\n                            <Table className={classes.table} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell style={{ width: 200 }}><h4>First Name</h4></TableCell>\r\n                                        <TableCell align=\"left\"><h4>Last Name</h4></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {userData.map((row, index) => (\r\n                                        <TableRow key={row.name}>\r\n                                            <TableCell style={{ width: 200 }}>\r\n                                                <Link to={`/userInfo?index=${index}`}><Button onClick={() => userSelected(index)}>{row.first_name}</Button></Link>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <Link to={`/userInfo?index=${index}`}><Button onClick={() => userSelected(index)}>{row.last_name}</Button></Link></TableCell>\r\n\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n\r\n                }\r\n            </div>\r\n          \r\n\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default Adduser;","C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\Redux\\reducer.js",[],"C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\Components\\userInfo.jsx",["52"],"import React, {useEffect} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport queryString from 'query-string'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button } from '@material-ui/core';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\n\r\n\r\nconst UserInfo = (props) => {\r\n    \r\n    const classes = useStyles(); \r\n\r\n    var parsed = queryString.parse(props.location.search)\r\n    \r\n  \r\n    const users = useSelector(state => state.users)\r\n    \r\n    \r\n    \r\n    return(\r\n           \r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                        <TableCell style={{ width: 200 }}><h4>First Name</h4></TableCell>\r\n                        <TableCell align=\"left\"><h4>Last Name</h4></TableCell>\r\n                        <TableCell align=\"left\"><h4>Phone Number</h4></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                  <TableBody>\r\n                    <TableRow>\r\n                        <TableCell style={{ width: 200 }}><h4>{users[parsed.index].first_name}</h4></TableCell>\r\n                        <TableCell align=\"left\"><h4>{users[parsed.index].last_name}</h4></TableCell>\r\n                        <TableCell align=\"left\">{users[parsed.index].phone_number}</TableCell>\r\n                        <TableCell align=\"left\"><Link to={`sendMessage?index=${parsed.index}`}><Button color=\"primary\" variant=\"contained\">Send Message</Button></Link></TableCell>\r\n\r\n                    </TableRow>\r\n                    \r\n                  </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default UserInfo","C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\Redux\\Actions.js",[],"C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\Components\\sendMessage.jsx",["53","54"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport TextField from '@material-ui/core/textField'\r\nimport { Button } from '@material-ui/core';\r\nimport queryString from 'query-string'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link } from 'react-router-dom'\r\nimport Nexmo from 'nexmo'\r\nimport { sentMessagesAction } from './../Redux/Actions'\r\n\r\nconst nexmo = new Nexmo({\r\n    apiKey: \"13e900bd\",\r\n    apiSecret: \"mPdutaFAgG9IkjbL\"\r\n})\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\n\r\nconst SendMessage = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const users = useSelector(state => state.users)\r\n\r\n    const [otpSent, setOtpSent] = React.useState(false)\r\n\r\n    // generating Otp\r\n    var minm = 10000;\r\n    var maxm = 99999;\r\n    let otp = Math.floor(Math\r\n        .random() * (maxm - minm + 1)) + minm;\r\n\r\n    \r\n\r\n    var parsed = queryString.parse(props.location.search)\r\n   console.log(otp)\r\n    const from = 'Vonage APIs';\r\n    const to = users[parsed.index].phone_number;\r\n\r\n\r\n\r\n\r\n\r\n    const sendOtp = () => {\r\n        let date = new Date();\r\n        let thisText = {\r\n            first_name: users[parsed.index].first_name,\r\n            last_name : users[parsed.index].last_name,\r\n            Time : date,\r\n            otp : otp\r\n        }\r\n        \r\n\r\n        dispatch(sentMessagesAction(thisText))\r\n\r\n        let text = `Hi. Your OTP is: ${otp}`\r\n        nexmo.message.sendSms(from, to, text);\r\n        setOtpSent(true)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell style={{ width: 200 }}><h4>First Name</h4></TableCell>\r\n                            <TableCell align=\"left\"><h4>Last Name</h4></TableCell>\r\n                            <TableCell align=\"left\"><h4>Phone Number</h4></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell style={{ width: 200 }}><h4>{users[parsed.index].first_name}</h4></TableCell>\r\n                            <TableCell align=\"left\"><h4>{users[parsed.index].last_name}</h4></TableCell>\r\n                            <TableCell align=\"left\">{users[parsed.index].phone_number}</TableCell>\r\n\r\n\r\n                        </TableRow>\r\n\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <br></br><br></br><br></br>\r\n\r\n            {(otpSent == false) ? <div style={{ textAlign: 'center' }}>\r\n                <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Message\"\r\n                    multiline\r\n                    rows={4}\r\n                    defaultValue={`Hi. Your OTP is: ${otp}`}\r\n                    variant=\"outlined\"\r\n                />\r\n                <div style={{ textAlign: 'center', marginTop: \"40px\" }}>\r\n                    <Button color=\"primary\" variant=\"contained\" onClick={sendOtp}> Send Otp</Button>\r\n                </div>\r\n            </div>\r\n                :\r\n                <p>The otp has been sent</p>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default SendMessage","C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\Components\\HomePage.jsx",[],"C:\\Users\\hp\\Desktop\\kissan\\otp-app\\src\\Components\\sentMessages.jsx",["55","56","57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":12},{"ruleId":"63","severity":1,"message":"67","line":4,"column":42,"nodeType":"65","messageId":"66","endLine":4,"endColumn":48},{"ruleId":"63","severity":1,"message":"68","line":34,"column":12,"nodeType":"65","messageId":"66","endLine":34,"endColumn":38},{"ruleId":"63","severity":1,"message":"69","line":1,"column":16,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"70","line":14,"column":10,"nodeType":"65","messageId":"66","endLine":14,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":102,"column":23,"nodeType":"73","messageId":"74","endLine":102,"endColumn":25},{"ruleId":"63","severity":1,"message":"75","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":21},{"ruleId":"63","severity":1,"message":"76","line":11,"column":10,"nodeType":"65","messageId":"66","endLine":11,"endColumn":16},{"ruleId":"63","severity":1,"message":"77","line":12,"column":10,"nodeType":"65","messageId":"66","endLine":12,"endColumn":27},{"ruleId":"63","severity":1,"message":"70","line":13,"column":10,"nodeType":"65","messageId":"66","endLine":13,"endColumn":14},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'currentlySelectedUserIndex' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useDispatch' is defined but never used.","'Button' is defined but never used.","'recievedUsersInfo' is defined but never used.","no-global-assign","no-unsafe-negation"]