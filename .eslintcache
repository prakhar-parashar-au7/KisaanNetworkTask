[{"C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\index.js":"1","C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\reportWebVitals.js":"2","C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\App.js":"3","C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\Redux\\reducer.js":"4","C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\Components\\HomePage.jsx":"5","C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\Components\\sendMessage.jsx":"6","C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\Redux\\Actions.js":"7","C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\Components\\addUsers.jsx":"8","C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\Components\\sentMessages.jsx":"9"},{"size":629,"mtime":1607139202664,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":454,"mtime":1607932828559,"results":"13","hashOfConfig":"11"},{"size":1023,"mtime":1607856266203,"results":"14","hashOfConfig":"11"},{"size":7050,"mtime":1607930289937,"results":"15","hashOfConfig":"11"},{"size":5178,"mtime":1607933075729,"results":"16","hashOfConfig":"11"},{"size":730,"mtime":1607927816085,"results":"17","hashOfConfig":"11"},{"size":20255,"mtime":1607932740310,"results":"18","hashOfConfig":"11"},{"size":4622,"mtime":1607932593298,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"11tvg8i",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\index.js",[],["43","44"],"C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\reportWebVitals.js",[],"C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\App.js",["45","46"],"C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\Redux\\reducer.js",[],"C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\Components\\HomePage.jsx",["47","48","49","50"],"import React from 'react';\r\nimport AddUsers from './addUsers';\r\nimport SentMessages from './sentMessages';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport './Homestyles.css'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        backgroundColor: \"#3B8BEB\",\r\n        color: \"#C4DBF6\",\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst HomePage = () => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const [contacts, setContacts] = React.useState(false)\r\n    const [messages, setMessages] = React.useState(false)\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        OTP App\r\n          </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <h4>Kisan Network</h4>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <br></br>\r\n\r\n\r\n                <List>\r\n                    <ListItem button key=\"Add\" onClick={() => { setContacts(true); setMessages(false); }}>\r\n\r\n                        <ListItemIcon>\r\n                            <Tooltip title=\"Contacts\">\r\n                                <img src=\"https://img.icons8.com/plasticine/100/000000/contacts.png\" width=\"50px\" height=\"50px\"/>\r\n                                \r\n                            </Tooltip>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Contacts\" />\r\n\r\n\r\n                    </ListItem>\r\n\r\n                    <ListItem button key=\"Add\" onClick={() => { setContacts(false); setMessages(true); }}>\r\n\r\n                        <ListItemIcon>\r\n                            <Tooltip title=\"Messages\">\r\n                                <img src=\"https://img.icons8.com/fluent/48/000000/new-message.png\" width=\"45px\" height=\"45px\"/>\r\n                            </Tooltip>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Messages\" />\r\n\r\n\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n\r\n\r\n\r\n            {contacts ?\r\n                <div id=\"content\">\r\n                    <AddUsers />\r\n                </div>\r\n                : messages ?\r\n                    <div id=\"content\">\r\n                        <SentMessages />\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <div id=\"heading\">\r\n                            Welcome to Otp app\r\n                </div>\r\n\r\n                        <div id=\"intro\">\r\n                            Keep records of users and send them OTPs.\r\n                     <br></br><br></br><br></br>\r\n                     Please use the drawer in the left to navigate.\r\n                </div>\r\n                    </div>\r\n\r\n            }\r\n\r\n            {/* \r\n                <SentMessages /> */}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default HomePage","C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\Components\\sendMessage.jsx",["51","52","53","54","55","56","57","58","59","60","61","62","63"],"C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\Redux\\Actions.js",["64"],"import axios from 'axios'\r\n\r\nexport const recievedUsersInfo = (users) => {\r\n    // axios({\r\n    //     method: \"post\",\r\n    //     url: \"http://localhost:1111/saveUsers\",\r\n    //     data: {\r\n    //         users: users\r\n    //     }\r\n    // })\r\n    console.log(users);\r\n    return {\r\n        type: \"RECIEVED_USERS\",\r\n        payload: {\r\n            users\r\n        }\r\n    }\r\n}\r\n\r\nexport const addNewUser = (newUser) => {\r\n    console.log(\"newUserAction\")\r\n    return {\r\n        type: \"NEW_USER\",\r\n        payload: {\r\n            newUser\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const sentMessagesAction = (sentMessage) => {\r\n    return {\r\n        type: \"SENT_MESSAGE\",\r\n        payload: {\r\n            sentMessage\r\n        }\r\n    }\r\n}","C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\Components\\addUsers.jsx",["65","66","67","68","69","70","71","72","73","74","75"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button } from '@material-ui/core';\r\nimport { recievedUsersInfo } from './../Redux/Actions'\r\nimport { Link } from 'react-router-dom'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n// custom styles for material ui components\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    headingRow: {\r\n        backgroundColor: \"#3f51b5\",\r\n\r\n    }\r\n});\r\n\r\n\r\n\r\n// Main Component\r\n\r\nconst Adduser = () => {\r\n   \r\n    // using all the dependencies, initializing hooks \r\n\r\n    const classes = useStyles();   \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const fr = new FileReader();\r\n\r\n    const usersData = useSelector(state => state.users)\r\n    \r\n\r\n    // states used in the component \r\n\r\n    const [userData, setUserData] = React.useState(null)\r\n    const [currentlySelectedUserIndex, setCurrentlySelectedUserIndex] = React.useState(null)\r\n    const [addUser, setAddUser] = React.useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        setUserData(usersData)\r\n    }, [])\r\n\r\n\r\n\r\n    // event handler for when user uploads a json file \r\n    const recievedJson = (e) => {\r\n        console.log(\"hi\")\r\n        const files = e.target.files[0]\r\n        fr.readAsText(files)\r\n\r\n        console.log(files)\r\n    }\r\n\r\n\r\n    // fileReader onload function(asynchronus) for when it completes reading the file   \r\n    fr.onload = function (e) {\r\n\r\n        let jsonData = (e.target.result)\r\n        let userData = JSON.parse(jsonData)\r\n        console.log(userData)\r\n        setUserData(userData)\r\n        sendUser(userData)\r\n        dispatch(recievedUsersInfo(userData))\r\n    }\r\n\r\n\r\n    const userSelected = (index) => {\r\n        setCurrentlySelectedUserIndex(index)\r\n    }\r\n\r\n\r\n    const [newFirstName, setNewFirstName] = useState(\"\")\r\n    const [newLastName, setNewLastName] = useState(\"\")\r\n    const [newPhoneNo, setNewPhoneNo] = useState(\"\")\r\n\r\n\r\n\r\n    const [first_name, setFirstName] = useState(\"\")\r\n    const [last_name, setLastName] = useState(\"\")\r\n    const [phone_number, setPhoneNo] = useState(\"\")\r\n    const [currentlyEditingIndex, setCurrentlyEditingIndex] = useState(-1)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const newFirstNameChange = (e) => {\r\n        setNewFirstName(e.target.value)\r\n    }\r\n\r\n    const newLastNameChange = (e) => {\r\n        setNewLastName(e.target.value)\r\n    }\r\n\r\n\r\n\r\n    const newPhoneNoChange = (e) => {\r\n        setNewPhoneNo(e.target.value)\r\n\r\n    }\r\n\r\n    const createData = (newFirstName, newLastName, newPhoneNo) => {\r\n        return { first_name: newFirstName, last_name: newLastName, phone_number: newPhoneNo };\r\n    }\r\n\r\n    const saveNewUser = () => {\r\n        const newUser = createData(newFirstName, newLastName, newPhoneNo)\r\n        setNewFirstName(\"\")\r\n        setNewLastName(\"\")\r\n        setNewPhoneNo(\"\")\r\n        setAddUser(false)\r\n        setUserData([newUser, ...usersData])\r\n        sendUser([newUser, ...usersData])\r\n        dispatch(recievedUsersInfo([newUser, ...usersData]))\r\n    }\r\n\r\n\r\n\r\n    const firstNameChange = (e) => {\r\n        setFirstName(e.target.value)\r\n        console.log(e.target.value)\r\n    }\r\n\r\n    const lastNameChange = (e) => {\r\n        setLastName(e.target.value)\r\n    }\r\n\r\n    const PhoneNoChange = (e) => {\r\n        setPhoneNo(e.target.value)\r\n    }\r\n\r\n\r\n\r\n    const currentlyEditing = (index) => {\r\n        setCurrentlyEditingIndex(index)\r\n        setFirstName(usersData[index].first_name)\r\n        setLastName(usersData[index].last_name)\r\n        setPhoneNo(usersData[index].phone_number)\r\n    }\r\n\r\n    const saveEditedUser = (index) => {\r\n        const newUsersData = usersData\r\n        newUsersData[index] = createData(first_name, last_name, phone_number)\r\n        // setUserData(newUsersData)\r\n        sendUser(newUsersData)\r\n        dispatch(recievedUsersInfo(newUsersData))\r\n\r\n        setFirstName(\"\")\r\n        setLastName(\"\")\r\n        setPhoneNo(\"\")\r\n        setCurrentlyEditingIndex(-1)\r\n\r\n    }\r\n\r\n    const deleteThis = (index) => {\r\n        console.log(\"hi\")\r\n        const newUsersData = usersData\r\n        newUsersData.splice(index, 1)\r\n        setUserData([...newUsersData])\r\n        sendUser(newUsersData)\r\n        dispatch(recievedUsersInfo(newUsersData))\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: \"get\",\r\n            url: \"https://boiling-reaches-91818.herokuapp.com/getUsers\"\r\n        }).then((res) => {\r\n            console.log(res)\r\n            setUserData(res.data[0].users)\r\n            dispatch(recievedUsersInfo(res.data[0].users))\r\n        })\r\n\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    const sendUser = (users) => {\r\n        axios({\r\n            method: \"post\",\r\n            url: \"https://boiling-reaches-91818.herokuapp.com/saveUsers\",\r\n            data: {\r\n                users: users\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n\r\n        <div>\r\n\r\n\r\n            <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto auto\", marginBottom: \"30px\", marginLeft: \"140px\" }}>\r\n                <div>\r\n                    <Button color=\"primary\" variant=\"contained\" onClick={() => { setAddUser(true) }}>Add new user</Button>\r\n                </div>\r\n                <h3>or</h3>\r\n                <label class=\"custom-file-upload\" for=\"selectFiles\">\r\n                    Upload a JSON file\r\n            <input type=\"file\" id=\"selectFiles\" onChange={(e) => { recievedJson(e) }} />\r\n                    {/* <Button color=\"primary\" variant=\"contained\">Upload a JSON file</Button> */}\r\n\r\n                </label>\r\n            </div>\r\n\r\n\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow className={classes.headingRow}>\r\n                            <TableCell><div style={{ textAlign: \"center\", color: \"white\" }}>\r\n                                <h3>ID</h3></div></TableCell>\r\n\r\n                            <TableCell ><div style={{ textAlign: \"center\", color: \"white\" }}>\r\n                                <h3>First Name</h3></div></TableCell>\r\n                            <TableCell ><div style={{ textAlign: \"center\", color: \"white\" }}>\r\n                                <h3>Last Name</h3></div></TableCell>\r\n                            <TableCell ><div style={{ textAlign: \"center\", color: \"white\" }}>\r\n                                <h3>Phone Number</h3></div></TableCell>\r\n                            <TableCell ></TableCell>\r\n                            <TableCell ></TableCell>\r\n\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            (addUser) ?\r\n\r\n                                <TableRow>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        <TextField\r\n                                            id=\"outlined-textarea\"\r\n                                            label=\"First Name\"\r\n                                            placeholder=\"\"\r\n                                            variant=\"outlined\"\r\n                                            onChange={newFirstNameChange}\r\n                                            value={newFirstName}\r\n\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            id=\"outlined-textarea\"\r\n                                            label=\"Last Name\"\r\n                                            placeholder=\"\"\r\n                                            variant=\"outlined\"\r\n                                            onChange={newLastNameChange}\r\n                                            value={newLastName}\r\n\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell >\r\n                                        <TextField\r\n                                            id=\"outlined-textarea\"\r\n                                            label=\"Phone Number\"\r\n                                            placeholder=\"\"\r\n                                            onChange={newPhoneNoChange}\r\n                                            variant=\"outlined\"\r\n                                            value={newPhoneNo}\r\n\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <Button variant=\"contained\" color=\"primary\" onClick={saveNewUser}>Save</Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n\r\n                                : null}\r\n\r\n\r\n                        {usersData.map((row, index) => (\r\n                            <TableRow key={row.name}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    <div style={{ marginLeft: \"10px\" }}>\r\n                                        <h3>{index + 1}</h3>\r\n                                    </div>\r\n\r\n\r\n\r\n                                </TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\r\n                                        (currentlyEditingIndex == index) ?\r\n                                            <TextField\r\n                                                id=\"outlined-textarea\"\r\n                                                label=\"First Name\"\r\n                                                placeholder=\"\"\r\n                                                variant=\"outlined\"\r\n                                                onChange={firstNameChange}\r\n                                                defaultValue={userData[index].first_name}\r\n\r\n\r\n                                            />\r\n                                            :\r\n                                            <>\r\n\r\n\r\n                                                <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n                                                    {(popupState) => (\r\n                                                        <div>\r\n\r\n                                                            <div className=\"name\" {...bindTrigger(popupState)}>\r\n\r\n                                                                {row.first_name}\r\n\r\n                                                            </div>\r\n                                                            {/* </Button> */}\r\n                                                            <Popover\r\n                                                                {...bindPopover(popupState)}\r\n                                                                anchorOrigin={{\r\n                                                                    vertical: 'bottom',\r\n                                                                    horizontal: 'center',\r\n                                                                }}\r\n                                                                transformOrigin={{\r\n                                                                    vertical: 'top',\r\n                                                                    horizontal: 'center',\r\n                                                                }}\r\n                                                            >\r\n\r\n                                                                <div id=\"dailog\">\r\n                                                                    {row.first_name} {row.last_name}\r\n                                                                    <br></br>\r\n                                                                    <br></br>\r\n                                                                    {row.phone_number}\r\n                                                                    <br></br>\r\n                                                                    <br></br>\r\n                                                                    <Link to={`sendMessage?index=${index}`} style={{ textDecoration: \"none\" }}><Button color=\"primary\" variant=\"contained\"> Send Otp</Button></Link>\r\n                                                                </div>\r\n\r\n                                                            </Popover>\r\n                                                        </div>\r\n                                                    )}\r\n                                                </PopupState>\r\n\r\n\r\n\r\n                                                {/* <Link to={`/userInfo?index=${index}`} style={{textDecoration : \"none\"}}> \r\n                                                <div className=\"name\">\r\n                                                    \r\n                                                    {row.first_name}\r\n                                                    \r\n                                                </div>\r\n                                                </Link> */}\r\n\r\n                                            </>\r\n                                    }\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {\r\n                                        (currentlyEditingIndex == index) ?\r\n                                            <TextField\r\n                                                id=\"outlined-textarea\"\r\n                                                label=\"Last Name\"\r\n                                                placeholder=\"\"\r\n                                                variant=\"outlined\"\r\n                                                onChange={lastNameChange}\r\n                                                defaultValue={userData[index].last_name}\r\n                                            />\r\n                                            :\r\n                                            <>\r\n\r\n                                                <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n                                                    {(popupState) => (\r\n                                                        <div>\r\n\r\n                                                            <div className=\"name\" {...bindTrigger(popupState)}>\r\n\r\n                                                                {row.last_name}\r\n\r\n                                                            </div>\r\n                                                            {/* </Button> */}\r\n                                                            <Popover\r\n                                                                {...bindPopover(popupState)}\r\n                                                                anchorOrigin={{\r\n                                                                    vertical: 'bottom',\r\n                                                                    horizontal: 'center',\r\n                                                                }}\r\n                                                                transformOrigin={{\r\n                                                                    vertical: 'top',\r\n                                                                    horizontal: 'center',\r\n                                                                }}\r\n                                                            >\r\n\r\n                                                                <div id=\"dailog\">\r\n                                                                    {row.first_name} {row.last_name}\r\n                                                                    <br></br>\r\n                                                                    <br></br>\r\n                                                                    {row.phone_number}\r\n                                                                    <br></br>\r\n                                                                    <br></br>\r\n                                                                    <Link to={`sendMessage?index=${index}`} style={{ textDecoration: \"none\" }}><Button color=\"primary\" variant=\"contained\"> Send Otp</Button></Link>\r\n                                                                </div>\r\n\r\n                                                            </Popover>\r\n                                                        </div>\r\n                                                    )}\r\n                                                </PopupState>\r\n                                            </>}\r\n                                </TableCell>\r\n                                <TableCell >\r\n\r\n                                    {\r\n                                        (currentlyEditingIndex == index) ?\r\n                                            <TextField\r\n                                                id=\"outlined-textarea\"\r\n                                                label=\"Phone No\"\r\n                                                placeholder=\"\"\r\n                                                variant=\"outlined\"\r\n                                                onChange={PhoneNoChange}\r\n                                                defaultValue={userData[index].phone_number}\r\n                                            />\r\n                                            :\r\n                                            <>\r\n\r\n                                                <div className=\"number\">\r\n                                                    {row.phone_number}\r\n                                                </div>\r\n                                            </>}\r\n\r\n\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    {\r\n                                        (currentlyEditingIndex == index) ?\r\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => { saveEditedUser(index) }}>Save</Button>\r\n                                            :\r\n                                            <>\r\n\r\n                                                <Button variant=\"contained\" color=\"primary\" onClick={() => { currentlyEditing(index) }}>Edit</Button>\r\n\r\n                                            </>}\r\n\r\n\r\n\r\n\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"right\">\r\n                                    {\r\n                                        (currentlyEditingIndex == index) ?\r\n                                            null\r\n                                            :\r\n\r\n\r\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => { deleteThis(index) }}>Delete</Button>\r\n                                    }</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default Adduser;","C:\\Users\\hp\\Desktop\\tasks\\kisaanNetwork\\kissan\\otp-app\\src\\Components\\sentMessages.jsx",["76","77","78","79","80","81"],"import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button } from '@material-ui/core';\r\nimport { recievedUsersInfo } from './../Redux/Actions'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst SentMessages = () => {\r\n\r\n    // const newSentMessages = useSelector(state => state.sentMessages)\r\n\r\n    const classes = useStyles();   // custom styles for materialUi component\r\n\r\n    \r\n\r\n    const [sentMessagesData, setSentMessagesData] = React.useState(null)\r\n    const [newSentMessages, setNewSentMessages] = React.useState(null)\r\n\r\n    \r\n\r\n\r\n  \r\n   \r\n\r\n    useEffect(()=> {\r\n         axios({\r\n             method : \"get\",\r\n             url: \"https://boiling-reaches-91818.herokuapp.com/getMessages\",\r\n         }).then((res) => {\r\n             setNewSentMessages(res.data[0].messages.reverse())\r\n         })\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n\r\n        <div>\r\n            <h3>Lists of Sent Messages</h3>\r\n          \r\n            \r\n\r\n             \r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.table} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell><h4>First Name</h4></TableCell>\r\n                                    <TableCell align=\"left\"><h4>Last Name</h4></TableCell>\r\n                                    <TableCell align=\"left\"><h4>Date</h4></TableCell>\r\n                                    <TableCell align=\"left\"><h4>OTP</h4></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                               \r\n                                 { newSentMessages && newSentMessages.map((row, index) => (\r\n                                    <TableRow>\r\n                                        <TableCell >\r\n                                            {row.first_name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            {row.last_name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            {row.Date}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            {row.OTP}\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                                {\r\n                            (sentMessagesData == null)\r\n                                ?\r\n                                null\r\n                                :\r\n\r\n                                \r\n\r\n                                \r\n                      \r\n                                sentMessagesData.map((row, index) => (\r\n                                    <TableRow>\r\n                                        <TableCell >\r\n                                            {row.first_name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            {row.last_name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            {row.Date}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            {row.OTP}\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))} \r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer> \r\n\r\n\r\n            \r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default SentMessages;",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":12},{"ruleId":"86","severity":1,"message":"90","line":4,"column":42,"nodeType":"88","messageId":"89","endLine":4,"endColumn":48},{"ruleId":"86","severity":1,"message":"91","line":10,"column":8,"nodeType":"88","messageId":"89","endLine":10,"endColumn":19},{"ruleId":"86","severity":1,"message":"92","line":19,"column":8,"nodeType":"88","messageId":"89","endLine":19,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":169,"column":33,"nodeType":"95","endLine":169,"endColumn":130},{"ruleId":"93","severity":1,"message":"94","line":182,"column":33,"nodeType":"95","endLine":182,"endColumn":128},{"ruleId":"86","severity":1,"message":"96","line":7,"column":8,"nodeType":"88","messageId":"89","endLine":7,"endColumn":13},{"ruleId":"86","severity":1,"message":"97","line":8,"column":8,"nodeType":"88","messageId":"89","endLine":8,"endColumn":17},{"ruleId":"86","severity":1,"message":"98","line":9,"column":8,"nodeType":"88","messageId":"89","endLine":9,"endColumn":17},{"ruleId":"86","severity":1,"message":"99","line":10,"column":8,"nodeType":"88","messageId":"89","endLine":10,"endColumn":22},{"ruleId":"86","severity":1,"message":"100","line":11,"column":8,"nodeType":"88","messageId":"89","endLine":11,"endColumn":17},{"ruleId":"86","severity":1,"message":"101","line":12,"column":8,"nodeType":"88","messageId":"89","endLine":12,"endColumn":16},{"ruleId":"86","severity":1,"message":"102","line":13,"column":8,"nodeType":"88","messageId":"89","endLine":13,"endColumn":13},{"ruleId":"86","severity":1,"message":"103","line":20,"column":7,"nodeType":"88","messageId":"89","endLine":20,"endColumn":12},{"ruleId":"86","severity":1,"message":"104","line":34,"column":11,"nodeType":"88","messageId":"89","endLine":34,"endColumn":18},{"ruleId":"86","severity":1,"message":"105","line":52,"column":11,"nodeType":"88","messageId":"89","endLine":52,"endColumn":15},{"ruleId":"86","severity":1,"message":"106","line":53,"column":11,"nodeType":"88","messageId":"89","endLine":53,"endColumn":13},{"ruleId":"107","severity":1,"message":"108","line":128,"column":23,"nodeType":"109","messageId":"110","endLine":128,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":145,"column":21,"nodeType":"95","endLine":145,"endColumn":200},{"ruleId":"86","severity":1,"message":"111","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"112","line":16,"column":8,"nodeType":"88","messageId":"89","endLine":16,"endColumn":18},{"ruleId":"86","severity":1,"message":"113","line":17,"column":8,"nodeType":"88","messageId":"89","endLine":17,"endColumn":11},{"ruleId":"86","severity":1,"message":"114","line":56,"column":12,"nodeType":"88","messageId":"89","endLine":56,"endColumn":38},{"ruleId":"115","severity":1,"message":"116","line":62,"column":8,"nodeType":"117","endLine":62,"endColumn":10,"suggestions":"118"},{"ruleId":"86","severity":1,"message":"119","line":88,"column":11,"nodeType":"88","messageId":"89","endLine":88,"endColumn":23},{"ruleId":"115","severity":1,"message":"120","line":206,"column":8,"nodeType":"117","endLine":206,"endColumn":10,"suggestions":"121"},{"ruleId":"107","severity":1,"message":"108","line":322,"column":64,"nodeType":"109","messageId":"110","endLine":322,"endColumn":66},{"ruleId":"107","severity":1,"message":"108","line":389,"column":64,"nodeType":"109","messageId":"110","endLine":389,"endColumn":66},{"ruleId":"107","severity":1,"message":"108","line":442,"column":64,"nodeType":"109","messageId":"110","endLine":442,"endColumn":66},{"ruleId":"107","severity":1,"message":"108","line":463,"column":64,"nodeType":"109","messageId":"110","endLine":463,"endColumn":66},{"ruleId":"107","severity":1,"message":"108","line":479,"column":64,"nodeType":"109","messageId":"110","endLine":479,"endColumn":66},{"ruleId":"86","severity":1,"message":"122","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":21},{"ruleId":"86","severity":1,"message":"123","line":2,"column":23,"nodeType":"88","messageId":"89","endLine":2,"endColumn":34},{"ruleId":"86","severity":1,"message":"124","line":11,"column":10,"nodeType":"88","messageId":"89","endLine":11,"endColumn":16},{"ruleId":"86","severity":1,"message":"125","line":12,"column":10,"nodeType":"88","messageId":"89","endLine":12,"endColumn":27},{"ruleId":"86","severity":1,"message":"126","line":13,"column":10,"nodeType":"88","messageId":"89","endLine":13,"endColumn":14},{"ruleId":"86","severity":1,"message":"127","line":35,"column":30,"nodeType":"88","messageId":"89","endLine":35,"endColumn":49},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'CssBaseline' is defined but never used.","'AddIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Paper' is defined but never used.","'nexmo' is assigned a value but never used.","'classes' is assigned a value but never used.","'from' is assigned a value but never used.","'to' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'currentlySelectedUserIndex' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'usersData'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'userSelected' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["131"],"'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'Button' is defined but never used.","'recievedUsersInfo' is defined but never used.","'Link' is defined but never used.","'setSentMessagesData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [usersData]",{"range":"136","text":"137"},"Update the dependencies array to be: [dispatch]",{"range":"138","text":"139"},[1826,1828],"[usersData]",[5332,5334],"[dispatch]"]